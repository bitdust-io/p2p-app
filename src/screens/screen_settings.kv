<NewDeviceItem>:
    text: 'New device'
    divider: None
    on_release: root.on_pressed()

    CustomIconLeftWidget:
        icon: 'qrcode-scan'
        padding: (0, 0, 0, 0)
        pos_hint: {'center_y': 0.5}
        md_bg_color: app.theme_cls.accent_color
        theme_text_color: "Custom"
        text_color: app.color_white
        on_release: root.on_pressed()


<DeviceItem>:
    text: root.name
    secondary_text: root.get_secondary_text()
    divider: None
    on_release: root.on_pressed()
    _txt_top_pad: dp(4)
    _txt_bot_pad: dp(4)

    CustomIconLeftWidget:
        icon: 'account'
        padding: (0, 0, 0, 0)
        pos_hint: {'center_y': 0.5}
        md_bg_color: app.theme_cls.primary_color
        theme_text_color: "Custom"
        text_color: app.color_white
        on_release: root.on_pressed()


# <OptionValueTextInput>:
#     size_hint_x: None
#     size_hint_y: None
#     width: dp(100)
#     height: self.line_height + dp(8)
#     pos_hint: {'right': 1, 'center_y': .5}
#     padding: dp(5), dp(4)
#     halign: 'left'
#     valign: 'center'
#     font_size: app.setting_small_font_size


# <OptionValueIntInput>:
#     input_filter: 'int'
#     width: dp(80)


# <OptionValueDiskSpaceInput>:
#     width: dp(70)


# <OptionValueSingleChoiceInput>:
#     width: dp(60)


<OptionNameLabel>:
    size_hint_y: None
    fixed_height: app.setting_record_height
    height: app.setting_record_height
    pos_hint: {'left': 0, 'center_y': .5}
    halign: 'left'
    valign: 'center'
    padding: 0, 0
    text_size: self.width, None
    font_size: app.setting_normal_font_size


<OptionDescriptionLabel>:
    size_hint: 1, None
    height: self.texture_size[1]
    text_size: self.width, None
    halign: 'left'
    valign: 'top'
    padding: dp(15), dp(0)
    font_size: app.setting_small_font_size


<ParentElement>:
    size_hint_y: None
    fixed_height: app.setting_record_height
    pos_hint: {'left': 0}
    halign: 'left'
    text_size: self.width, None
    font_size: app.setting_normal_font_size
    on_press: self.item_clicked_callback(self.item_key, self)


<ServiceElement>:

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        Widget:
            size_hint: None, 1
            width: dp(8)

        CustomIcon:
            size_hint: None, None
            size: (dp(24), app.setting_record_height)
            pos_hint: {'right': 0.9, 'center_y': 0.5}
            font_size: '13sp'
            icon: 'circle'
            color: (.7, .7, .7, 1) if root.service_state != 'ON' else (.6, 1, .6, 1)

        OptionNameLabel:
            id: option_label
            text: root.service_name
            on_press: root.item_clicked_callback(root.item_key, root)


<BooleanElement>:

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        OptionNameLabel:
            id: option_label
            text: root.option_name
            on_press: root.item_clicked_callback(root.item_key, root)

        Widget:
            size_hint: None, 1
            width: dp(5)

        CheckBox:
            canvas.before:
                Color:
                    rgb: 0,0,0,1
                Rectangle:
                    pos: self.pos[0] + 6, self.pos[1] + 6
                    size: self.size[0] - 12, self.size[1] - 12
                Color:
                    rgb: 1,1,1,1
                Rectangle:
                    pos: self.pos[0] + 7, self.pos[1] + 7
                    size: self.size[0] - 14, self.size[1] - 14
            id: option_value_checkbox
            size_hint: None, None
            pos_hint: {'right': 1, 'center_y': 0.5}
            width: dp(24)
            height: dp(24)
            active: bool(root.option_value)
            on_active: root.value_modified_callback(root.item_key, self.active)

    OptionDescriptionLabel:
        text: root.option_description

    Widget:
        size_hint: 1, None
        height: dp(5)


<IntegerElement>:
    size_hint: 1, None
    height: self.minimum_height

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        OptionNameLabel:
            id: option_label
            text: root.option_name
            on_press: root.item_clicked_callback(root.item_key, root)

        Widget:
            size_hint: None, 1
            width: dp(5)

        SingleLineTextInput:
            id: option_value_input
            size_hint_x: None
            width: dp(100)
            pos_hint: {'right': 1, 'center_y': .5}
            padding: dp(10), dp(6)
            halign: 'left'
            valign: 'center'
            font_size: app.setting_small_font_size
            input_filter: 'int'
            # text: '{}'.format(root.option_value)
            on_focus: root.on_focus_changed()

        Widget:
            size_hint: None, 1
            width: dp(5)

    OptionDescriptionLabel:
        text: root.option_description

    Widget:
        size_hint: 1, None
        height: dp(5)


<DiskSpaceElement>:
    size_hint: 1, None
    height: self.minimum_height

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        OptionNameLabel:
            id: option_label
            text: root.option_name
            on_press: root.item_clicked_callback(root.item_key, root)

		Widget:
			size_hint: None, 1
			width: dp(5)

        SingleLineTextInput:
            id: option_value_input
            size_hint_x: None
            # size_hint_y: None
            width: dp(70)
            # height: self.line_height + dp(8)
            pos_hint: {'right': 1, 'center_y': .5}
            padding: dp(10), dp(6)
            halign: 'left'
            valign: 'center'
            font_size: app.setting_small_font_size
            # text: '{}'.format(root.option_value)
            on_focus: root.on_focus_changed()

    OptionDescriptionLabel:
        text: root.option_description

	Widget:
		size_hint: 1, None
		height: dp(5)


<SingleChoiceElement>:
    size_hint: 1, None
    height: self.minimum_height

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        OptionNameLabel:
            id: option_label
            text: root.option_name
            on_press: root.item_clicked_callback(root.item_key, root)

		Widget:
			size_hint: None, 1
			width: dp(5)

        SingleLineTextInput:
            id: option_value_input
            size_hint_x: None
            # size_hint_y: None
            width: dp(70)
            # height: self.line_height + dp(8)
            pos_hint: {'right': 1, 'center_y': .5}
            padding: dp(10), dp(6)
            halign: 'left'
            valign: 'center'
            font_size: app.setting_small_font_size
            # text: '{}'.format(root.option_value)
            on_focus: root.on_focus_changed()

    OptionDescriptionLabel:
        text: root.option_description

	Widget:
		size_hint: 1, None
		height: dp(5)


<TextElement>:
    size_hint: 1, None
    height: self.minimum_height

    HorizontalLayout:
        size_hint: 1, None
        height: self.minimum_height

        OptionNameLabel:
            id: option_label
            text: root.option_name
            on_press: root.item_clicked_callback(root.item_key, root)

		Widget:
			size_hint: None, 1
			width: dp(5)

        SingleLineTextInput:
            id: option_value_input
            size_hint_x: None
            # size_hint_y: None
            width: dp(100)
            # height: self.line_height + dp(8)
            pos_hint: {'right': 1, 'center_y': .5}
            padding: dp(10), dp(6)
            halign: 'left'
            valign: 'center'
            font_size: app.setting_small_font_size
            # text: '{}'.format(root.option_value)
            on_focus: root.on_focus_changed()

    OptionDescriptionLabel:
        text: root.option_description

	Widget:
		size_hint: 1, None
		height: dp(5)


<SettingsTreeView>:
    size_hint: 1, None
    height: self.minimum_height
    root_options: {'text': 'settings'}
    indent_start: dp(20)
    indent_level: dp(5)
    hide_root: True


<TabDevices>:

    VerticalScrollView:
        id: devices_scroll_view

        MDList:
            id: devices_list_view
            pos_hint: {'top': 1}


<TabOptions>:

    VerticalScrollView:
        id: options_scroll_view

        PageContainerWithLeftPaddingLayout:
            size_hint: None, None
            width: root.width - app.scroll_bar_width
            height: self.minimum_height

            SettingsTreeView:
                id: options_settings_tree
                pos_hint: {'top': 1}
                size_hint: 1, None
                height: self.minimum_height


<SettingsScreen>:

    ScreenContainerLayout:

        TopEmptyScreenSpace:

        AppScreenLayout:

			MDTabs:
				id: settings_tabs
				anim_duration: 0
				background_color: (1, 1, 1, 0)
				text_color_normal: (0, 0, 0, .5)
				text_color_active: self.theme_cls.primary_color
        		on_tab_switch: root.on_tab_switched(*args)

				TabDevices:
					title: "devices"

				TabOptions:
					title: "options"

        BottomEmptyScreenSpace:
